name: Update Paper Archive

on:
  schedule:
    # Run daily at 9:30 AM UTC (30 min after paper fetch at 9:00 AM)
    - cron: '30 9 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  update-archive:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Download archive from Cloudflare Worker
        run: |
          echo "Downloading archive from worker..."
          curl -s "https://paper-discovery-worker.rohan-vinaik.workers.dev/api/archive" > papers-archive.json

          if [ $? -eq 0 ]; then
            echo "âœ“ Archive downloaded successfully"
          else
            echo "âœ— Failed to download archive"
            exit 1
          fi

      - name: Get archive statistics
        run: |
          echo "Archive Statistics:"
          curl -s "https://paper-discovery-worker.rohan-vinaik.workers.dev/api/archive/stats" || echo "Stats unavailable"

      - name: Generate Markdown archive
        run: |
          python3 << 'PYTHON_SCRIPT'
          import json
          from datetime import datetime
          from collections import defaultdict

          # Load archive
          with open('papers-archive.json', 'r') as f:
              data = json.load(f)

          papers = data['papers']

          # Create markdown
          md = f"""# Paper Archive

          **Total Papers:** {data['total']}
          **Last Updated:** {data['updated']}

          This archive is automatically updated daily by the paper discovery system.

          ## Statistics

          - **Total Papers:** {data['total']}
          - **Last Update:** {data['updated']}
          - **Sources:** arXiv, bioRxiv

          ---

          ## Papers by Tag

          """

          # Group by tags
          by_tag = defaultdict(list)
          for paper in papers:
              for tag in paper['tags']:
                  by_tag[tag].append(paper)

          # Sort tags alphabetically
          for tag in sorted(by_tag.keys()):
              md += f"### {tag.upper()} ({len(by_tag[tag])} papers)\n\n"

              for paper in sorted(by_tag[tag], key=lambda x: x['last_seen'], reverse=True):
                  md += f"**{paper['title']}**  \n"
                  md += f"*{', '.join(paper['authors'][:3])}"
                  if len(paper['authors']) > 3:
                      md += f" et al."
                  md += f"*  \n"

                  if paper.get('arxiv_id'):
                      md += f"arXiv: [{paper['arxiv_id']}](https://arxiv.org/abs/{paper['arxiv_id']}) | "
                  elif paper.get('doi'):
                      md += f"DOI: [{paper['doi']}](https://doi.org/{paper['doi']}) | "

                  md += f"[PDF]({paper['pdf_url']})  \n"
                  md += f"*Published: {paper['published'][:10]} | Score: {paper.get('relevance_score', 'N/A')}*  \n\n"

          # Save markdown
          with open('PAPERS-ARCHIVE.md', 'w') as f:
              f.write(md)

          print(f"âœ“ Generated markdown for {len(papers)} papers")
          PYTHON_SCRIPT

      - name: Check for changes
        id: check_changes
        run: |
          git diff --quiet papers-archive.json PAPERS-ARCHIVE.md || echo "changed=true" >> $GITHUB_OUTPUT

      - name: Commit and push if changed
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config --local user.name "GitHub Action"
          git config --local user.email "action@github.com"
          git add papers-archive.json PAPERS-ARCHIVE.md
          git commit -m "ðŸ¤– Auto-update paper archive - $(date -u +%Y-%m-%d)"
          git push

      - name: Summary
        run: |
          echo "## Paper Archive Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** âœ… Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          TOTAL=$(curl -s "https://paper-discovery-worker.rohan-vinaik.workers.dev/api/archive/stats" | python3 -c "import sys, json; print(json.load(sys.stdin)['total'])" 2>/dev/null || echo "N/A")
          echo "**Total Papers:** $TOTAL" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.check_changes.outputs.changed }}" == "true" ]; then
            echo "**Changes:** Archive updated and committed" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Changes:** No new papers since last update" >> $GITHUB_STEP_SUMMARY
          fi
